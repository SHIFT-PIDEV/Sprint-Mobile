package com.mycompany.upgradi;


import com.codename1.components.ImageViewer;
import com.codename1.facebook.ui.LikeButton;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Image;
import com.codename1.ui.URLImage;
import com.codename1.ui.util.UIBuilder;
import com.company.entities.Event;
import com.company.gui.Login;
import com.mycompany.services.EventS;
import java.util.ArrayList;
import java.util.List;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MainUpgradi {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        /*Form hi = new Form("Hi World", BoxLayout.y());

        EventS es=EventS.getInstance();
        List<Event> list =new ArrayList<>();
        list=es.getAllUsers();
        System.out.println(list);
        hi.add(new Label("Hi World"));
     
        for(Event e:list){
            hi.add(new Label(e.getNomE()));
            try {
               // C:/Users/asus/upgradi/public/uploads
                           ImageViewer iv = new ImageViewer();
               EncodedImage ec = EncodedImage.create("/load.jpg");
                Image img = URLImage.createToStorage(ec,"http://127.0.0.1:8000/uploads/"+e.getImage(), 
                        "http://127.0.0.1:8000/uploads/"+e.getImage(), URLImage.RESIZE_SCALE);
                iv.setImage(img);
                hi.add(iv);
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        }
        hi.show();*/
        
        
        /*Form hi;
        UIBuilder ui=new UIBuilder();
        hi=(Form)ui.createContainer(theme, "loginForm");
        
        hi.show();*/
        Login lf=new Login("login");
       
        lf.show();
       
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
